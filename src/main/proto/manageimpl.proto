syntax = "proto3";

package org.brewchain.manage.gens;

enum PMANModule {
	MAN = 0; 
};
enum PMANCommand {
    CIA = 0; // 判断是否需要注册
    RAA = 1; // 设置管理员密码
    LGI = 2; // 管理员登录

    BQC = 3; // 批量读取配置信息
    BSC = 4; // 批量设置配置信息
    SNW = 5; // 设置chain net
    GNW = 8; // 获取chain net
    CNA = 6; // 创建node账户
    GNA = 7; // 获取node账户
    SNA = 9; // 设置node账户
    ENA = 10;// 导出node账户
    SNP = 11;// 设置node账户
    
    SLC = 12;// 发送锁定cws交易
    SUC = 13;// 发送解锁cws交易
}

message ReqSendLockCWS {
	string pwd = 1;
	int32 amount = 2;
}

message ReqSendUnLockCWS {}

message RespDoTxResult {
	string retCode = 1;
    string retMsg = 2;
    string txHash = 3;
}

message ReqExportNodeAccount {
    string pwd = 1;
}

message RespExportNodeAccount {
    string retCode = 1;
    string retMsg = 2;
    string keyStoreJsonStr = 3;
}

message ReqCreateNewAccount {
    string pwd = 1;
}

message RespCreateNewAccount {
    string retCode = 1;
    string retMsg = 2;
}

message ReqCheckIsFirstOpen {
}

message RespCheckIsFirstOpen {
    string retCode = 1;
    string retMsg = 2;
}

message ReqRegister {
    string pwd = 1;
}

message RespRegister {
    string retCode = 1;
    string retMsg = 2;
    string token = 3;
}

message ReqLogin {
    string pwd = 1;
}

message RespLogin {
    string retCode = 1;
    string retMsg = 2;
    string token = 3;
}

message ReqBatchQueryConfig {
    repeated string keys = 1;
}

message RespBatchQueryConfig {
    repeated string values = 1;
    string retCode = 2;
    string retMsg = 3;
}

message ReqBatchSetConfig {
    repeated string keys = 1;
    repeated string values = 2;
}

message RespBatchSetConfig {
    string retCode = 1;
    string retMsg = 2;
}

message ReqSetNetwork {
    string network = 1;
}

message RespSetNetwork {
    string retCode = 1;
    string retMsg = 2;
}

message ReqGetNetwork {
    
}

message RespGetNetwork {
    string retCode = 1;
    string retMsg = 2;
    string network = 3;
}

message ReqSetNodeAccount {
    string keyStoreJsonStr = 1;
    string pwd = 2;
}

message RespSetNodeAccount {
    string retCode = 1;
    string retMsg = 2;
}

message ReqSetNodeAccountByPriv {
    string priv = 1;
    string pwd = 2;
}

message ReqGetNodeAccount {
    string address = 1;
}

message RespGetNodeAccount {
    string retCode = 1;
    string retMsg = 2;
    string address = 3;
}

message AccountValueImpl {
    int32 nonce = 1;
    int64 balance = 2;
    string pubKey = 3;
    int64 max = 4;
    int64 acceptMax = 5;
    int32 acceptLimit = 6;
    repeated string address = 7;
    repeated AccountTokenValueImpl tokens = 8;
    repeated AccountCryptoValueImpl cryptos = 9;
}

message AccountTokenValueImpl {
    string token = 1;
    int64 balance = 2;
}

message AccountCryptoValueImpl {
    string symbol = 1; // 用于分类ERC721 Token的标记
    repeated AccountCryptoTokenImpl tokens = 2;
}

message AccountCryptoTokenImpl {
    string hash = 1; // Token的hash，hash(index,total,code,name,timestamp)
    int64 timestamp = 2; // Token创建时间
    int32 index = 3; // 该Token发行时的索引
    int32 total = 4; // 该Token的发行总数量
    string code = 5; // Token的编号
    string name = 6; // Token的名称
    string owner = 7; // 所有人的账户地址
    int32 nonce = 8; // 交易次数
    int64 ownertime = 9; // 所有人获取时间
}